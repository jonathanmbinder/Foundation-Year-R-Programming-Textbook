# Introduction to R programming and RStudio

## R

R is a programming language that is widely used for statistical analysis and other data science applications.
It is free and open source.
Competing statistical software usually requires expensive subscriptions.
Using R programming, you can not only run statistical analysis, but you can also create plots, maps, and even produce PDF and HTML reports.

## RStudio

Like other programming languages, R can be run from the terminal (Mac) or command line (PC).
However, running code from the command line can be quite difficult.
In this course we will be using RStudio to run R.
RStudio is a graphical user interface (GUI).
A GUI makes it easier for you, the user, to write code, input data, and visualise results.

## Installing R and RStudio

The first step is to download and install R.
Navigate to the Comprehensive R Archive Network ([CRAN](https://cran.r-project.org/)) and select the correct download link for your system (Windows, Mac, or...Linux?).

You will need to download and install RStudio. Navigate to the (Posit website)[https://posit.co/download/rstudio-desktop/] to install the desktop version of RStudio.

## Tour of RStudio

The RStudio window is divided into a number of panes.

### Console, Terminal, Background Jobs

By default, the bottom left pane will contain tabs Console, Terminal, and Background Jobs.

You will mostly be using the console tab.
This is where your code will be executed and where you will see results from statistical tests.
You can also type code here to be executed.

::: callout-tip
## Navigating history of the console

You can press arrow keys <kbd>↑</kbd> and <kbd>↓</kbd> to go backward and forward through the history of code that was executed.
This is useful for quickly going back to fix an error in code.
:::

### Environment, History, Connections, Build, Tutorial

By default, the top-right pane has tabs Environment, History, Connections, Build, and Tutorial.
You will mostly use the environment tab.
This is where data you import or variables you define will appear.

::: callout-tip
## Viewing things in the environment

You can click on items that are in the environment to view them in an Excel-like viewer.
This is useful for scrolling through data and looking at data in an easy-to-view manner.
:::

### Files, Plots, Packages, Help, Viewer, Presentation

By default, the bottom right pane will have tabs for Files, Plots, Packages, Help, Viewer, and Presentation.
You will spend most of your time in the Plots pane as this is where plots will appear when you generate plots.

### Source

By default, the top left pane that will appear when you create a new R script is called the "Source" pane.
This is where you will write script that can be executed in the console.

## Writing your first R script

While you can write and execute code directly in the console, when you are doing analyses I strongly encourage you to 
