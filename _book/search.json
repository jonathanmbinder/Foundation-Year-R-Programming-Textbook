[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Foundation Year R Programming",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "intro.html#r",
    "href": "intro.html#r",
    "title": "1  Introduction to R programming and RStudio",
    "section": "1.1 R",
    "text": "1.1 R\nR is a programming language that is widely used for statistical analysis and other data science applications. It is free and open source. Competing statistical software usually requires expensive subscriptions. Using R programming, you can not only run statistical analysis, but you can also create plots, maps, and even produce PDF and HTML reports."
  },
  {
    "objectID": "intro.html#rstudio",
    "href": "intro.html#rstudio",
    "title": "1  Introduction to R programming and RStudio",
    "section": "1.2 RStudio",
    "text": "1.2 RStudio\nLike other programming languages, R can be run from the terminal (Mac) or command line (PC). However, running code from the command line can be quite difficult. In this course we will be using RStudio to run R. RStudio is a graphical user interface (GUI). A GUI makes it easier for you, the user, to write code, input data, and visualise results."
  },
  {
    "objectID": "intro.html#installing-r-and-rstudio",
    "href": "intro.html#installing-r-and-rstudio",
    "title": "1  Introduction to R programming and RStudio",
    "section": "1.3 Installing R and RStudio",
    "text": "1.3 Installing R and RStudio\nThe first step is to download and install R. Navigate to the Comprehensive R Archive Network (CRAN) and select the correct download link for your system (Windows, Mac, or…Linux?).\nYou will need to download and install RStudio. Navigate to the (Posit website)[https://posit.co/download/rstudio-desktop/] to install the desktop version of RStudio."
  },
  {
    "objectID": "intro.html#tour-of-rstudio",
    "href": "intro.html#tour-of-rstudio",
    "title": "1  Introduction to R programming and RStudio",
    "section": "1.4 Tour of RStudio",
    "text": "1.4 Tour of RStudio\nThe RStudio window is divided into a number of panes.\n\n1.4.1 Console, Terminal, Background Jobs\nBy default, the bottom left pane will contain tabs Console, Terminal, and Background Jobs.\nYou will mostly be using the console tab. This is where your code will be executed and where you will see results from statistical tests. You can also type code here to be executed.\n\n\n\n\n\n\nNavigating history of the console\n\n\n\nYou can press arrow keys ↑ and ↓ to go backward and forward through the history of code that was executed. This is useful for quickly going back to fix an error in code.\n\n\n\n\n1.4.2 Environment, History, Connections, Build, Tutorial\nBy default, the top-right pane has tabs Environment, History, Connections, Build, and Tutorial. You will mostly use the environment tab. This is where data you import or variables you define will appear.\n\n\n\n\n\n\nViewing things in the environment\n\n\n\nYou can click on items that are in the environment to view them in an Excel-like viewer. This is useful for scrolling through data and looking at data in an easy-to-view manner.\n\n\n\n\n1.4.3 Files, Plots, Packages, Help, Viewer, Presentation\nBy default, the bottom right pane will have tabs for Files, Plots, Packages, Help, Viewer, and Presentation. You will spend most of your time in the Plots pane as this is where plots will appear when you generate plots.\n\n\n1.4.4 Source\nBy default, the top left pane that will appear when you create a new R script is called the “Source” pane. This is where you will write script that can be executed in the console."
  },
  {
    "objectID": "intro.html#writing-your-first-r-script",
    "href": "intro.html#writing-your-first-r-script",
    "title": "1  Introduction to R programming and RStudio",
    "section": "1.5 Writing your first R script",
    "text": "1.5 Writing your first R script\nWhile you can write and execute code directly in the console, when you are doing analyses I strongly encourage you to"
  }
]